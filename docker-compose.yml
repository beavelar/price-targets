services:
  bot:
    build:
      context: ./src
      dockerfile: ./docker/bot/Dockerfile.dev
    command: bash -c "set -xe; npm run startBot"
    # command: "tail -f /dev/null"
    environment:
      - BOT_SERVER_PORT=${BOT_SERVER_PORT}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - REALTIME_SERVICE_URI=${REALTIME_SERVICE_URI}
    volumes:
      - ./src/node/services/bot:/usr/src/services/bot
      - ./src/node/util/discord:/usr/src/util/discord
      - ./src/node/util/env:/usr/src/util/env
      - ./src/node/util/logger:/usr/src/util/logger
  mongodb:
    image: mongo:latest
    volumes:
      - database:/data/db
  ratings:
    build:
      context: ./src
      dockerfile: ./docker/ratings/Dockerfile.dev
    command: bash -c "set -xe; npm run startRatings"
    # command: "tail -f /dev/null"
    environment:
      - RATINGS_REQUEST_URL=${RATINGS_REQUEST_URL}
      - RATINGS_SERVER_PORT=${RATINGS_SERVER_PORT}
    volumes:
      - ./src/node/services/ratings:/usr/src/services/ratings
      - ./src/node/util/env:/usr/src/util/env
      - ./src/node/util/logger:/usr/src/util/logger
  ratings_history:
    build:
      context: ./src
      dockerfile: ./docker/ratings_history/Dockerfile.dev
    command: go run ratings_history.go
    # command: "tail -f /dev/null"
    depends_on:
      - "mongodb"
    environment:
      - DATABASE_COLLECTION_NAME=${DATABASE_COLLECTION_NAME}
      - DATABASE_CONNECT_TIMEOUT=${DATABASE_CONNECT_TIMEOUT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_URI=${DATABASE_URI}
      - RATINGS_HISTORY_SERVER_PORT=${RATINGS_HISTORY_SERVER_PORT}
    volumes:
      - ./src/go/ratings_history:/usr/src/app/ratings_history
  realtime:
    build:
      context: ./src
      dockerfile: ./docker/realtime/Dockerfile.dev
    command: go run realtime.go
    # command: "tail -f /dev/null"
    environment:
      - RATINGS_SERVICE_URI=${RATINGS_SERVICE_URI}
      - RATINGS_HISTORY_SERVICE_URI=${RATINGS_HISTORY_SERVICE_URI}
      - REALTIME_SERVER_PORT=${REALTIME_SERVER_PORT}
      - TICKER_SERVICE_URI=${TICKER_SERVICE_URI}
    volumes:
      - ./src/go/realtime:/usr/src/app/realtime
  refresher:
    build:
      context: ./src
      dockerfile: ./docker/refresher/Dockerfile.dev
    command: go run refresher.go
    # command: "tail -f /dev/null"
    environment:
      - BOT_SERVICE_URI=${BOT_SERVICE_URI}
      - RATINGS_HISTORY_SERVICE_URI=${RATINGS_HISTORY_SERVICE_URI}
      - REALTIME_SERVICE_URI=${REALTIME_SERVICE_URI}
      - REFRESHER_SYMBOLS_PATH=${REFRESHER_SYMBOLS_PATH}
    volumes:
      - ./src/go/refresher:/usr/src/app/refresher
  ticker:
    build:
      context: ./src
      dockerfile: ./docker/ticker/Dockerfile.dev
    command: go run ticker.go
    # command: "tail -f /dev/null"
    environment:
      - TICKER_SERVER_PORT=${TICKER_SERVER_PORT}
    volumes:
      - ./src/go/ticker:/usr/src/app/ticker
volumes:
  database: {}
